{"version":3,"sources":["components/Breakdown.tsx","hooks/useTranslation.ts","App.tsx","index.tsx"],"names":["Breakdown","japanese","useQuery","a","axios","get","data","senses","english_definitions","useTranslationQuery","useEffect","console","log","style","display","flexDirection","alignItems","className","toRomaji","map","en","App","useState","jp","setJp","gap","fontSize","padding","value","onChange","e","currentTarget","split","s","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"8QAMaA,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,ECgBK,WAA6C,IAAhBA,EAAe,uDAAJ,GAC7C,OAAOC,mBAAS,CAAC,KAAMD,GAAR,sBAAmB,4BAAAE,EAAA,sEACbC,IAAMC,IAAN,wDACgCJ,IAFnB,cAC1BK,EAD0B,yBAIzBA,EAAKA,KAAKA,KAAK,GAAGC,OAAO,GAAGC,qBAJH,4CDjBjBC,CAAoBR,GAA7BK,EAAR,EAAQA,KAIR,OAHAI,qBAAU,WACRC,QAAQC,IAAIN,KACX,CAACA,IAEF,sBACEO,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,UAJhB,UAOE,mBAAGC,UAAW,eAAd,SAA+BC,mBAASjB,KACxC,mBAAGgB,UAAW,eAAd,SAA+BhB,IAC/B,mBAAGgB,UAAW,eAAd,gBACGX,QADH,IACGA,OADH,EACGA,EAAMa,KAAI,SAACC,GAAD,OACT,4BAAaA,GAALA,Y,QEaHC,MA/Bf,WACE,MAAoBC,mBAAS,4EAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,OACE,sBACEX,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZS,IAAK,QALT,UAQE,qCACA,cAAC,IAAD,CACEZ,MAAO,CAAEa,SAAU,GAAIC,QAAS,IAChCC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAMM,EAAEC,cAAcH,UAEzC,qBACEf,MAAO,CACLC,QAAS,OACTW,IAAK,QAHT,SAMGF,EAAGS,MAAM,eAAeb,KAAI,SAACc,GAAD,OAC3B,cAAC,EAAD,CAAWhC,SAAUgC,aCxBzBC,EAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,EAA7B,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.748956ce.chunk.js","sourcesContent":["import React, { FC, useEffect } from \"react\";\r\nimport { toRomaji } from \"wanakana\";\r\nimport { useTranslationQuery } from \"../hooks/useTranslation\";\r\ninterface BreakdownProps {\r\n  japanese: string;\r\n}\r\nexport const Breakdown: FC<BreakdownProps> = ({ japanese }) => {\r\n  const { data } = useTranslationQuery(japanese);\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <p className={\"breakdown-en\"}>{toRomaji(japanese)}</p>\r\n      <p className={\"breakdown-jp\"}>{japanese}</p>\r\n      <p className={\"breakdown-en\"}>\r\n        {data?.map((en) => (\r\n          <p key={en}>{en}</p>\r\n        ))}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst useTranslation = async (japanese: string = \"\") => {\r\n  const { data } = await axios.get<string[]>(\r\n    `https://jisho.org:5000/api/v1/search/words?keyword=${japanese}`\r\n  );\r\n  return data;\r\n};\r\ninterface JishoSection {\r\n  antonyms: string[];\r\n  english_definitions: string[];\r\n}\r\n\r\ninterface JishoBase {\r\n  senses: JishoSection[];\r\n  slug: string;\r\n}\r\n\r\ninterface JishoResponse {\r\n  data: JishoBase[];\r\n}\r\n\r\nexport function useTranslationQuery(japanese = \"\") {\r\n  return useQuery([\"jp\", japanese], async () => {\r\n    const data = await axios.get<JishoResponse>(\r\n      `https://jisho.org/api/v1/search/words?keyword=${japanese}`\r\n    );\r\n    return data.data.data[0].senses[0].english_definitions;\r\n  });\r\n}\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Breakdown } from \"./components/Breakdown\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nfunction App() {\n  const [jp, setJp] = useState(\"こんにちわ。げんきですか\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"25px\",\n      }}\n    >\n      <h1>imi</h1>\n      <TextareaAutosize\n        style={{ fontSize: 24, padding: 10 }}\n        value={jp}\n        onChange={(e) => setJp(e.currentTarget.value)}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"25px\",\n        }}\n      >\n        {jp.split(/\\s*[\\s,]\\s*/).map((s) => (\n          <Breakdown japanese={s} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}